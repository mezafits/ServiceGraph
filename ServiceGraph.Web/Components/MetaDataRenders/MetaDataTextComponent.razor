<FluentAccordion>
    @foreach (var item in metadata)
    {
        <FluentAccordionItem Heading="@(item.TagName)"  @onclick="() => OnSelect(item)" >
            <BlazoredTextEditor @ref="@QuillHtml">
                <EditorContent>
                    <div class="metadata-content">@((MarkupString)item.TagValue)</div>
                </EditorContent>
            </BlazoredTextEditor>
        </FluentAccordionItem>
    }
</FluentAccordion>

@code {
    [Parameter]
    public EventCallback<Metadata> OnSelected { get; set; }

    BlazoredTextEditor QuillHtml = new BlazoredTextEditor();

    protected override void OnInitialized()
    {
        QuillHtml.ReadOnly = true;
        
        base.OnInitialized();
    }

    public void OnSelect(Metadata item)
    {
        if(OnSelected.HasDelegate)
        {
            OnSelected.InvokeAsync(item);
        }
    }

    [Parameter]
    public List<Metadata> metadata { get; set; } = new List<Metadata>();
}
