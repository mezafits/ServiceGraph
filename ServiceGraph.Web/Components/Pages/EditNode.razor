@inject ISyncService syncService;
@inject IJSRuntime JS;

<style>
    .metadata-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem;
    }

    .metadata-card {
        margin-top: 10px;
        background: #f5f5f5;
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
    }

    .metadata-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
        font-weight: bold;
    }

    .metadata-tag {
        font-size: 1.1rem;
    }

    .metadata-type {
        background-color: #d0e7ff;
        color: #0078d4;
        border-radius: 4px;
        padding: 0.2rem 0.5rem;
        font-size: 0.8rem;
    }

    .metadata-content {
        font-size: 0.95rem;
        color: #333;
    }

    .metadata-link {
        color: #0066cc;
        text-decoration: none;
        word-break: break-all;
    }

    .metadata-code {
        background-color: #eaeaea;
        padding: 0.5rem;
        border-radius: 4px;
        font-family: Consolas, monospace;
        overflow-x: auto;
    }

    .quick-add-container {
        margin-bottom: 1rem;
        padding: 0.75rem;
        background-color: #f0f8ff;
        border-radius: 8px;
        border: 1px solid #d0e7ff;
    }

    .quick-add-title {
        font-weight: bold;
        margin-bottom: 0.5rem;
        color: #0078d4;
    }

    .quick-add-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .quick-add-btn {
        background-color: #e6f2ff;
        border: 1px solid #bdd9ff;
        color: #0066cc;
        border-radius: 4px;
        padding: 0.25rem 0.5rem;
        font-size: 0.85rem;
        cursor: pointer;
        transition: all 0.2s;
    }

        .quick-add-btn:hover {
            background-color: #d0e7ff;
            border-color: #0078d4;
        }
</style>

<div class="modal fade" id="editNodeModal" tabindex="-1" role="dialog" aria-labelledby="myModalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalTitle">Edit Node</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@serviceNode">
                    <div class="form-group">
                        <label for="serviceName">Service Name</label>
                        <InputText id="serviceName" class="form-control" @bind-Value="serviceNode.Name" />
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="SaveServiceNode" data-dismiss="modal">Save Changes</button>
                <button type="button" class="btn btn-secondary" @onclick="@(() => Complete.InvokeAsync("Saved"))" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback<string> Complete { get; set; }

    private ServiceNode serviceNode = new ServiceNode { Metadata = new List<Metadata>() };
  
    public void SetServiceNode(ServiceNode node)
    {
        serviceNode = node;
        StateHasChanged();
    }

    private async Task SaveServiceNode()
    {
        await syncService.UpsertServiceNodeAsync(serviceNode);
    }

    
}